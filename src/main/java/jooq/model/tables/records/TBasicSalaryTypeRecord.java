/**
 * This class is generated by jOOQ
 */
package jooq.model.tables.records;

/**
 * This class is generated by jOOQ.
 *
 * 薪酬模块 | 存储各个公司自己配置的基本工资项 | 王默 | 2016-09-14 | 工资设置页面，用户界面操作
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.3.2" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TBasicSalaryTypeRecord extends org.jooq.impl.UpdatableRecordImpl<jooq.model.tables.records.TBasicSalaryTypeRecord> implements org.jooq.Record8<org.jooq.types.ULong, java.lang.Long, java.lang.String, java.lang.Byte, java.lang.Byte, java.lang.String, java.sql.Timestamp, java.sql.Timestamp> {

	private static final long serialVersionUID = -1147667837;

	/**
	 * Setter for <code>oa_salary.t_basic_salary_type.id</code>.
	 */
	public void setId(org.jooq.types.ULong value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>oa_salary.t_basic_salary_type.id</code>.
	 */
	public org.jooq.types.ULong getId() {
		return (org.jooq.types.ULong) getValue(0);
	}

	/**
	 * Setter for <code>oa_salary.t_basic_salary_type.tenant_id</code>. 公司ID | 王默 | 2016-09-14 | 账号模块
	 */
	public void setTenantId(java.lang.Long value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>oa_salary.t_basic_salary_type.tenant_id</code>. 公司ID | 王默 | 2016-09-14 | 账号模块
	 */
	public java.lang.Long getTenantId() {
		return (java.lang.Long) getValue(1);
	}

	/**
	 * Setter for <code>oa_salary.t_basic_salary_type.salary_name</code>. 该基本工资项的名称 | 王默 | 2016-09-14 | 用户界面操作，输入
	 */
	public void setSalaryName(java.lang.String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>oa_salary.t_basic_salary_type.salary_name</code>. 该基本工资项的名称 | 王默 | 2016-09-14 | 用户界面操作，输入
	 */
	public java.lang.String getSalaryName() {
		return (java.lang.String) getValue(2);
	}

	/**
	 * Setter for <code>oa_salary.t_basic_salary_type.is_participate_overtime</code>. 是否参与计算加班工资 | 王默 | 2016-09-14 | @1:参与 @2:不参与 | 用户界面操作，switch按钮
	 */
	public void setIsParticipateOvertime(java.lang.Byte value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>oa_salary.t_basic_salary_type.is_participate_overtime</code>. 是否参与计算加班工资 | 王默 | 2016-09-14 | @1:参与 @2:不参与 | 用户界面操作，switch按钮
	 */
	public java.lang.Byte getIsParticipateOvertime() {
		return (java.lang.Byte) getValue(3);
	}

	/**
	 * Setter for <code>oa_salary.t_basic_salary_type.is_participate_attendance</code>. 是否参与计算缺勤扣款 | 王默 | 2016-09-14 | @1：参与 @2：不参与 | 用户界面操作，switch按钮
	 */
	public void setIsParticipateAttendance(java.lang.Byte value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>oa_salary.t_basic_salary_type.is_participate_attendance</code>. 是否参与计算缺勤扣款 | 王默 | 2016-09-14 | @1：参与 @2：不参与 | 用户界面操作，switch按钮
	 */
	public java.lang.Byte getIsParticipateAttendance() {
		return (java.lang.Byte) getValue(4);
	}

	/**
	 * Setter for <code>oa_salary.t_basic_salary_type.salary_description</code>. 这项工资的描述 | 王默 | 2016-09-14 | 用户界面操作，输入
	 */
	public void setSalaryDescription(java.lang.String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>oa_salary.t_basic_salary_type.salary_description</code>. 这项工资的描述 | 王默 | 2016-09-14 | 用户界面操作，输入
	 */
	public java.lang.String getSalaryDescription() {
		return (java.lang.String) getValue(5);
	}

	/**
	 * Setter for <code>oa_salary.t_basic_salary_type.create_time</code>.
	 */
	public void setCreateTime(java.sql.Timestamp value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>oa_salary.t_basic_salary_type.create_time</code>.
	 */
	public java.sql.Timestamp getCreateTime() {
		return (java.sql.Timestamp) getValue(6);
	}

	/**
	 * Setter for <code>oa_salary.t_basic_salary_type.update_time</code>.
	 */
	public void setUpdateTime(java.sql.Timestamp value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>oa_salary.t_basic_salary_type.update_time</code>.
	 */
	public java.sql.Timestamp getUpdateTime() {
		return (java.sql.Timestamp) getValue(7);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<org.jooq.types.ULong> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record8 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row8<org.jooq.types.ULong, java.lang.Long, java.lang.String, java.lang.Byte, java.lang.Byte, java.lang.String, java.sql.Timestamp, java.sql.Timestamp> fieldsRow() {
		return (org.jooq.Row8) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row8<org.jooq.types.ULong, java.lang.Long, java.lang.String, java.lang.Byte, java.lang.Byte, java.lang.String, java.sql.Timestamp, java.sql.Timestamp> valuesRow() {
		return (org.jooq.Row8) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<org.jooq.types.ULong> field1() {
		return jooq.model.tables.TBasicSalaryType.T_BASIC_SALARY_TYPE.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Long> field2() {
		return jooq.model.tables.TBasicSalaryType.T_BASIC_SALARY_TYPE.TENANT_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field3() {
		return jooq.model.tables.TBasicSalaryType.T_BASIC_SALARY_TYPE.SALARY_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Byte> field4() {
		return jooq.model.tables.TBasicSalaryType.T_BASIC_SALARY_TYPE.IS_PARTICIPATE_OVERTIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Byte> field5() {
		return jooq.model.tables.TBasicSalaryType.T_BASIC_SALARY_TYPE.IS_PARTICIPATE_ATTENDANCE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field6() {
		return jooq.model.tables.TBasicSalaryType.T_BASIC_SALARY_TYPE.SALARY_DESCRIPTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field7() {
		return jooq.model.tables.TBasicSalaryType.T_BASIC_SALARY_TYPE.CREATE_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field8() {
		return jooq.model.tables.TBasicSalaryType.T_BASIC_SALARY_TYPE.UPDATE_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.types.ULong value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Long value2() {
		return getTenantId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value3() {
		return getSalaryName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Byte value4() {
		return getIsParticipateOvertime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Byte value5() {
		return getIsParticipateAttendance();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value6() {
		return getSalaryDescription();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value7() {
		return getCreateTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value8() {
		return getUpdateTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TBasicSalaryTypeRecord value1(org.jooq.types.ULong value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TBasicSalaryTypeRecord value2(java.lang.Long value) {
		setTenantId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TBasicSalaryTypeRecord value3(java.lang.String value) {
		setSalaryName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TBasicSalaryTypeRecord value4(java.lang.Byte value) {
		setIsParticipateOvertime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TBasicSalaryTypeRecord value5(java.lang.Byte value) {
		setIsParticipateAttendance(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TBasicSalaryTypeRecord value6(java.lang.String value) {
		setSalaryDescription(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TBasicSalaryTypeRecord value7(java.sql.Timestamp value) {
		setCreateTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TBasicSalaryTypeRecord value8(java.sql.Timestamp value) {
		setUpdateTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TBasicSalaryTypeRecord values(org.jooq.types.ULong value1, java.lang.Long value2, java.lang.String value3, java.lang.Byte value4, java.lang.Byte value5, java.lang.String value6, java.sql.Timestamp value7, java.sql.Timestamp value8) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached TBasicSalaryTypeRecord
	 */
	public TBasicSalaryTypeRecord() {
		super(jooq.model.tables.TBasicSalaryType.T_BASIC_SALARY_TYPE);
	}

	/**
	 * Create a detached, initialised TBasicSalaryTypeRecord
	 */
	public TBasicSalaryTypeRecord(org.jooq.types.ULong id, java.lang.Long tenantId, java.lang.String salaryName, java.lang.Byte isParticipateOvertime, java.lang.Byte isParticipateAttendance, java.lang.String salaryDescription, java.sql.Timestamp createTime, java.sql.Timestamp updateTime) {
		super(jooq.model.tables.TBasicSalaryType.T_BASIC_SALARY_TYPE);

		setValue(0, id);
		setValue(1, tenantId);
		setValue(2, salaryName);
		setValue(3, isParticipateOvertime);
		setValue(4, isParticipateAttendance);
		setValue(5, salaryDescription);
		setValue(6, createTime);
		setValue(7, updateTime);
	}
}
